Q1. Write a program to create a new text file named test.txt

package day10_assignment;
import java.io.*;

public class Q1 {
    public static void main(String[] args) {
        try {
            File f = new File("test.txt");
            if(f.createNewFile()) {
                System.out.println("File created: " + f.getName());
            } else {
                System.out.println("File already exists");
            }
        } catch(IOException e) {
            System.out.println(e);
        }
    }
}
Output:
File created: test.txt

Q2. Write a program to check whether a file exists at a given path

package day10_assignment;
import java.io.*;

public class Q2 {
    public static void main(String[] args) {
        File f = new File("C:\\path\\to\\file.txt");
        if(f.exists()) {
            System.out.println("File exists");
        } else {
            System.out.println("File does not exist");
        }
    }
}
Output:
File exists

Q3. Write "Hello, World!" into a file using FileWriter

package day9_assignment;
import java.io.*;

public class Q3 {
    public static void main(String[] args) {
        try {
            FileWriter fw = new FileWriter("hello.txt");
            fw.write("Hello, World!");
            fw.close();
            System.out.println("Successfully wrote to file");
        } catch(IOException e) {
            System.out.println(e);
        }
    }
}
Output:
Successfully wrote to file

Q4. Read the content of a file line by line using BufferedReader

package day9_assignment;
import java.io.*;

public class Q4 {
    public static void main(String[] args) {
        try {
            BufferedReader br = new BufferedReader(new FileReader("hello.txt"));
            String line;
            while((line = br.readLine()) != null) {
                System.out.println(line);
            }
            br.close();
        } catch(IOException e) {
            System.out.println(e);
        }
    }
}
Output
Hello, World!

Q5. Append a line of text to an existing file

package day10_assignment;
import java.io.*;

public class Q5 {
    public static void main(String[] args) {
        try {
            FileWriter fw = new FileWriter("hello.txt", true);
            fw.write("\nAppended line");
            fw.close();
            System.out.println("Successfully appended to file");
        } catch(IOException e) {
            System.out.println(e);
        }
    }
}
Output:
Successfully appended to file

Q6. Count lines, words, and characters in a file

package day10_assignment;
import java.io.*;

public class Q6 {
    public static void main(String[] args) {
        try {
            BufferedReader br = new BufferedReader(new FileReader("hello.txt"));
            int lines = 0, words = 0, chars = 0;
            String line;
            
            while((line = br.readLine()) != null) {
                lines++;
                chars += line.length();
                String[] wordArray = line.split(" ");
                words += wordArray.length;
            }
            
            br.close();
            System.out.println("Lines: " + lines);
            System.out.println("Words: " + words);
            System.out.println("Characters: " + chars);
        } catch(IOException e) {
            System.out.println(e);
        }
    }
}
O/P
Lines: 2
Words: 3
Characters: 19

Q7. Copy content from one file to another

package day10_assignment;
import java.io.*;

public class Q7 {
    public static void main(String[] args) {
        try {
            BufferedReader br = new BufferedReader(new FileReader("source.txt"));
            BufferedWriter bw = new BufferedWriter(new FileWriter("destination.txt"));
            
            String line;
            while((line = br.readLine()) != null) {
                bw.write(line);
                bw.newLine();
            }
            
            br.close();
            bw.close();
            System.out.println("File copied successfully");
        } catch(IOException e) {
            System.out.println(e);
        }
    }
}
Output:

File copied successfully

Q8. List all files in a directory

package day10_assignment;
import java.io.*;

public class Q8 {
    public static void main(String[] args) {
        File dir = new File("C:\\path\\to\\directory");
        File[] files = dir.listFiles();
        
        if(files != null) {
            for(File f : files) {
                System.out.println(f.getName());
            }
        }
    }
}
Output:
file1.txt
file2.jpg
document.pdf

Q9. Filter and display only .txt files

package day9_assignment;
import java.io.*;

public class Q9 {
    public static void main(String[] args) {
        File dir = new File("C:\\path\\to\\directory");
        File[] files = dir.listFiles(new FilenameFilter() {
            public boolean accept(File dir, String name) {
                return name.endsWith(".txt");
            }
        });
        
        if(files != null) {
            for(File f : files) {
                System.out.println(f.getName());
            }
        }
    }
}
Output:
file1.txt
notes.txt

Q10. Serialize and deserialize a Student object

package day9_assignment;
import java.io.*;

class Student implements Serializable {
    int id;
    String name;
    
    Student(int id, String name) {
        this.id = id;
        this.name = name;
    }
    
    public String toString() {
        return id + " " + name;
    }
}

public class Q10 {
    public static void main(String[] args) {
        Student s = new Student(101, "Amit");
        
        try {
            FileOutputStream f = new FileOutputStream("student.ser");
            ObjectOutputStream o = new ObjectOutputStream(f);
            o.writeObject(s);
            o.close();
            f.close();
            System.out.println("Serialized successfully");
            
            FileInputStream fi = new FileInputStream("student.ser");
            ObjectInputStream oi = new ObjectInputStream(fi);
            Student deserialized = (Student)oi.readObject();
            oi.close();
            fi.close();
            System.out.println("Deserialized: " + deserialized);
        } catch(Exception e) {
            System.out.println(e);
        }
    }
}
Output:
Serialized successfully
Deserialized: 101 Amit

Q11. Read a file using Scanner and display tokens

package day10_assignment;
import java.io.*;
import java.util.*;

public class Q11 {
    public static void main(String[] args) {
        try {
            Scanner sc = new Scanner(new File("hello.txt"));
            while(sc.hasNext()) {
                System.out.println(sc.next());
            }
            sc.close();
        } catch(FileNotFoundException e) {
            System.out.println(e);
        }
    }
}
Output:
Hello,
World!
Appended
line

Q12. Search for a specific word and count occurrences

package day10_assignment;
import java.io.*;

public class Q12 {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new FileReader("hello.txt"));
        String line;
        int count = 0;
        String word = "Hello";
        
        while((line = br.readLine()) != null) {
            String[] words = line.split(" ");
            for(String w : words) {
                if(w.equals(word)) {
                    count++;
                }
            }
        }
        
        br.close();
        System.out.println("Occurrences of '" + word + "': " + count);
    }
}
Output:

Occurrences of 'Hello': 1

Q13. Create, move, and delete a file

package day10_assignment;
import java.io.*;
import java.nio.file.*;

public class Q13 {
    public static void main(String[] args) throws IOException {
        Path source = Paths.get("test.txt");
        Files.createFile(source);
        System.out.println("File created");
        
        Path target = Paths.get("new_test.txt");
        Files.move(source, target, StandardCopyOption.REPLACE_EXISTING);
        System.out.println("File moved");
        
        Files.delete(target);
        System.out.println("File deleted");
    }
}
Output:
File created
File moved
File deleted

Q14. Read all lines of a file using Files.readAllLines()

package day9_assignment;
import java.io.*;
import java.nio.file.*;
import java.util.*;

public class Q14 {
    public static void main(String[] args) throws IOException {
        List<String> lines = Files.readAllLines(Paths.get("hello.txt"));
        for(String line : lines) {
            System.out.println(line);
        }
    }
}
Output:
Hello, World!
Appended line

Q15. Write data using Files.write() and append

package day10_assignment;
import java.io.*;
import java.nio.file.*;
import java.util.*;

public class Q15 {
    public static void main(String[] args) throws IOException {
        List<String> lines = Arrays.asList("Line 1", "Line 2");
        Files.write(Paths.get("data.txt"), lines);
        System.out.println("File written");
        
        Files.write(Paths.get("data.txt"), 
                   Arrays.asList("Line 3"), 
                   StandardOpenOption.APPEND);
        System.out.println("Data appended");
    }
}
Output:

File written
Data appended

Q16. Walk through a directory tree

package day10_assignment;
import java.io.*;
import java.nio.file.*;

public class Q16 {
    public static void main(String[] args) throws IOException {
        Files.walk(Paths.get("C:\\path\\to\\directory"))
             .filter(Files::isRegularFile)
             .forEach(System.out::println);
    }
}
Output:
C:\path\to\directory\file1.txt
C:\path\to\directory\subdir\file2.txt

Q17. Copy a file with REPLACE_EXISTING option

package day10_assignment;
import java.io.*;
import java.nio.file.*;

public class Q17 {
    public static void main(String[] args) throws IOException {
        Files.copy(Paths.get("source.txt"), 
                  Paths.get("destination.txt"), 
                  StandardCopyOption.REPLACE_EXISTING);
        System.out.println("File copied with replace existing");
    }
}
Output:
File copied with replace existing

Q18. Check and print file size

package day9_assignment;
import java.io.*;
import java.nio.file.*;

public class Q18 {
    public static void main(String[] args) throws IOException {
        long size = Files.size(Paths.get("hello.txt"));
        System.out.println("File size: " + size + " bytes");
    }
}
Output:
File size: 19 bytes

Q19. Serialize an Employee class

package day10_assignment;
import java.io.*;

class Employee implements Serializable {
    int id;
    String name;
    
    Employee(int id, String name) {
        this.id = id;
        this.name = name;
    }
}

public class Q19 {
    public static void main(String[] args) {
        try {
            Employee emp = new Employee(101, "John");
            FileOutputStream f = new FileOutputStream("employee.ser");
            ObjectOutputStream o = new ObjectOutputStream(f);
            o.writeObject(emp);
            o.close();
            f.close();
            System.out.println("Employee serialized");
        } catch(IOException e) {
            System.out.println(e);
        }
    }
}
Output:
Employee serialized

Q20. Deserialize employee.ser

package day10_assignment;
import java.io.*;

public class Q20 {
    public static void main(String[] args) {
        try {
            FileInputStream f = new FileInputStream("employee.ser");
            ObjectInputStream o = new ObjectInputStream(f);
            Employee emp = (Employee)o.readObject();
            o.close();
            f.close();
            System.out.println("Employee ID: " + emp.id);
            System.out.println("Employee Name: " + emp.name);
        } catch(Exception e) {
            System.out.println(e);
        }
    }
}
Output:
Employee ID: 101
Employee Name: John
